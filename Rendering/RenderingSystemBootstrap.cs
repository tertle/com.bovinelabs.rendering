// <copyright file="WorldInitialization.cs" company="BovineLabs">
//     Copyright (c) BovineLabs. All rights reserved.
// </copyright>
// <auto-generated>It's not, just don't want analyzers working on this file.</auto-generated>
namespace BovineLabs.Systems.Rendering
{
    using Unity.Entities;
    using Unity.Rendering;
    using UnityEngine;
    using UnityEngine.Experimental.Rendering;

    [ExecuteAlways]
    public class RenderingSystemBootstrap : ComponentSystem
    {
        private RenderMeshSystem meshRendererSystem;
        private LODGroupSystemV1 lodSystem;

        /// <inheritdoc/>
        protected override void OnCreateManager()
        {
            this.meshRendererSystem = this.World.GetOrCreateManager<RenderMeshSystem>();
            this.lodSystem = this.World.GetOrCreateManager<LODGroupSystemV1>();

#if UNITY_2019_1_OR_NEWER
            this.World.GetOrCreateManager<Unity.Rendering.RenderMeshSystemV2>().Enabled = false;
#else
            this.World.GetOrCreateManager<Unity.Rendering.RenderMeshSystem>().Enabled = false;
            this.World.GetOrCreateManager<Unity.Rendering.RenderingSystemBootstrap>().Enabled = false;
#endif
            RenderPipeline.beginCameraRendering += this.OnBeforeCull;
            Camera.onPreCull += this.OnBeforeCull;
        }

        /// <inheritdoc />
        protected override void OnDestroyManager()
        {
            RenderPipeline.beginCameraRendering -= this.OnBeforeCull;
            Camera.onPreCull -= this.OnBeforeCull;
        }

        /// <inheritdoc/>
        protected override void OnUpdate()
        {
        }

        private void OnBeforeCull(Camera camera)
        {
#if UNITY_EDITOR && UNITY_2018_3_OR_NEWER
            var prefabEditMode = UnityEditor.SceneManagement.StageUtility.GetCurrentStageHandle() !=
                                 UnityEditor.SceneManagement.StageUtility.GetMainStageHandle();
            var gameCamera = (camera.hideFlags & HideFlags.DontSave) == 0;
            if (prefabEditMode && !gameCamera)
            {
                return;
            }
#endif
            this.lodSystem.ActiveCamera = camera;
            this.lodSystem.Update();
            this.lodSystem.ActiveCamera = null;

            this.meshRendererSystem.ActiveCamera = camera;
            this.meshRendererSystem.Update();
            this.meshRendererSystem.ActiveCamera = null;
        }
    }
}